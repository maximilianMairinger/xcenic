:host {
  --border: var(--primary-text);
  
  

  /* private */
  --wave-opacity: 1;
  --background-color: #f2f2f2;

  --wave-color: rgb(var(--primary-text));
  --counter-wave-color: var(--background-color);
}


:host {
  display: block;
  width: fit-content;

  background: var(--background-color);
  border-radius: 25px;
}


/* :host(:focus-within) {
  background-color: red;
} */

cover-me {
  background: rgba(0, 0, 0, .04);
  opacity: 0;
  transition: .2s;
  border-radius: inherit;
}

:host(.selected) cover-me {
  background: rgba(255, 255, 255, .1);
}

:host(:hover:not(.afterClickFocus)) cover-me {
  opacity: 1;
}

focus-man {
  transform: scale(1.05);
  transition: .3s;

  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  border-radius: inherit;
}

focus-man {
  box-shadow: inset 0 0 2.5px 0px rgba(var(--primary-theme), 0);
}

:host(.preSelected) focus-man {
  box-shadow: inset 0 0 2.5px 0px rgba(0, 153, 255, 0);
}


:host(:not(.clickFocus):focus-within.preSelected) focus-man {
  box-shadow: inset 0 0 0 2.5px rgb(0, 153, 255);
}

:host(:not(.clickFocus):focus-within) focus-man  {
  box-shadow: inset 0 0 0 2.5px rgba(var(--primary-theme), 1);
  transform: scale(1);
}

a {
  transition: border .3s, color .3s;
}

a {
  height: min-content;
  width: max-content;
}



button-text {
  display: block;
  font-size: 1em;
  margin: auto 0;
  padding: 13px 24px;
  text-align: center;
  font-weight: bold;
  
  box-sizing: border-box;
  color: #D2E1E1;
  mix-blend-mode: difference;
}

:host(.preSelected) button-text {
  color: white;
}



:host(.rippleSettled.preSelected) button-text {
  
}

:host(:not(.selected):not(.preSelected).rippleSettled) button-text {
  color: rgb(var(--primary-text));
  color: black;
  mix-blend-mode: normal;
}

:host(.selected.preSelected.rippleSettled) button-text {
  color: #d2e1e1;
  mix-blend-mode: normal;
}

/* button-text {
  color: var(--text-color);
}

:host(.selected) button-text {
  color: var(--counter-text-color);
} */


button-wave {
  
}

button-waves :nth-child(2n) button-wave {
  background: var(--counter-wave-color);
}

button-waves :nth-child(2n):last-child button-wave {
  background: var(--counter-wave-color);
}

button-waves :nth-child(2n+1):last-child button-wave {
  background: var(--wave-color);
}







/* :host(:not(.enabled)) {
  border: 1px solid rgba(var(--border), .15);
  color: rgb(var(--text))
}


:host(:focus-within) {
  border: 1px solid rgba(var(--border), .35);
}

:host(:focus-within) component-body {
  background: rgba(var(--text), .075)
} */



